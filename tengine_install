#!/bin/bash
BASEDIR=/opt/src  #下载的资源保存目录
SOFTDIR=/opt/webserver      #软件安装目录
if [ ! -d $BASEDIR ];then
  mkdir -p $BASEDIR
fi

if [ ! -d $SOFTDIR ];then
  mkdir -p $SOFTDIR
fi

cd $BASEDIR

yum -y install zip unzip wget
yum install -y gcc gcc-c++  zlib-devel
yum -y install GeoIP GeoIP-data GeoIP-devel
#创建用户www
if [ 'grep "www" /etc/passwd | wc -l' ]; then
echo "adding user www \n "
groupadd www
useradd -s /sbin/nologin -M -g www www
else
echo "www user exists"
fi

#判断目录/var/lib/nginx/client/是否存在，不存在则创建
if [ ! -d /var/lib/nginx/client/ ];then
  mkdir -p /var/lib/nginx/client/
fi

#判断目录/var/lib/nginx/client/是否存在，不存在则创建
if [ ! -d /data/proxy/proxy_temp_dir ];then
  mkdir -p /data/proxy/proxy_temp_dir
fi

#下载相关的模块，并解压
#############LuaJIT-2.0.5###########
if [ ! -f LuaJIT-2.0.5.tar.gz ] ;then
  wget -c http://luajit.org/download/LuaJIT-2.0.5.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi

tar zxvf LuaJIT-2.0.5.tar.gz
cd LuaJIT-2.0.5

#判断make是否出错，如果出错，则退出脚本
make 
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

#判断make install是否出错，如果出错退出脚本
make install
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

export LUAJIT_LIB=/usr/local/lib
export LUAJIT_INC=/usr/local/include/luajit-2.0

if [ ! -d /opt/src ];then
  mkdir -p /opt/src
fi

cd $BASEDIR
#############v0.3.1rc1###########
if [ ! -f v0.3.1rc1.tar.gz ] ;then
  wget -c https://github.com/simpl/ngx_devel_kit/archive/v0.3.1rc1.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf v0.3.1rc1.tar.gz

#############v0.10.12rc2###########
if [ ! -f v0.10.12rc2.tar.gz ];then
  wget -c https://github.com/openresty/lua-nginx-module/archive/v0.10.12rc2.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf v0.10.12rc2.tar.gz




#############zlib-1.2.11###########
if [ ! -f zlib-1.2.11.tar.gz ];then
  wget -c  http://www.zlib.net/zlib-1.2.11.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf zlib-1.2.11.tar.gz

#安装epel
rpm -ivh   http://ftp.linux.ncsu.edu/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

#############pcre-8.37###########
if [ ! -f pcre-8.37.tar.gz ];then
  wget -c http://ftp.pcre.org/pub/pcre/pcre-8.37.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
  tar zxvf pcre-8.37.tar.gz
fi


cd pcre-8.37
./configure
#判断configure是否出现问题
if [ $? -ne 0 ];then
echo "configure failed ,please check it out!"
exit 1
fi

#判断make是否出错，如果出错，则退出脚本
make 
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

#判断make install是否出错，如果出错退出脚本
make install
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

cd $BASEDIR
#############openssl1.0.2###########
if [ ! -f  openssl-1.0.2c.tar.gz ];then
  wget -c  https://ftp.openssl.org/source/old/1.0.2/openssl-1.0.2c.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf openssl-1.0.2c.tar.gz

##################master#############
if [ ! -f master ];then
  wget -c https://codeload.github.com/gnosek/nginx-upstream-fair/zip/master
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
unzip master


##############2.3.tar.gz##############
if [ ! -f  2.3.tar.gz ];then
  wget -c https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf 2.3.tar.gz

##############tengine-2.2.2##############
if [ ! -f tengine-2.2.2.tar.gz ];then
  wget -c http://tengine.taobao.org/download/tengine-2.2.2.tar.gz
  if [ $? -ne 0 ];then
    echo "file download failed , please check out "
    exit 1
  fi
fi
tar zxvf tengine-2.2.2.tar.gz

cd $BASEDIR/tengine-2.2.2
./configure \
  --prefix=$SOFTDIR/nginx \
  --conf-path=$SOFTDIR/nginx/etc/nginx.conf \
  --error-log-path=/var/log/nginx/error.log \
  --pid-path=/var/run/nginx/nginx.pid  \
  --lock-path=/var/lock/nginx.lock \
  --user=www \
  --group=www \
  --with-http_ssl_module \
  --with-http_flv_module \
  --with-http_stub_status_module \
  --with-http_gzip_static_module \
  --with-http_realip_module \
  --with-http_concat_module \
  --with-http_geoip_module \
  --http-log-path=/var/log/nginx/access.log \
  --http-client-body-temp-path=/var/lib/nginx/client/ \
  --http-proxy-temp-path=/var/lib/nginx/proxy/ \
  --http-fastcgi-temp-path=/var/lib/nginx/fcgi/  \
  --http-uwsgi-temp-path=/var/lib/nginx/uwsgi/  \
  --http-scgi-temp-path=/var/lib/nginx/scgi/  \
  --with-openssl=/opt/src/openssl-1.0.2c \
  --with-zlib=$BASEDIR/zlib-1.2.11 \
  --add-module=$BASEDIR/nginx-upstream-fair-master \
  --add-module=$BASEDIR/ngx_cache_purge-2.3 \
  --add-module=$BASEDIR/lua-nginx-module-0.10.12rc2 \
  --add-module=$BASEDIR/ngx_devel_kit-0.3.1rc1 \
  --with-pcre=$BASEDIR/pcre-8.37

#判断configure是否出现问题
if [ $? -ne 0 ];then
echo "configure failed ,please check it out!"
exit 1
fi

#判断make是否出错，如果出错，则退出脚本
make 
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

#判断make install是否出错，如果出错退出脚本
make install
if [ $? -ne 0 ];then
echo "make failed ,please check it out!"
exit 1
fi

#建立软连接
if [ -L /lib64/libluajit-5.1.so.2 ] ;then
    rm -f /lib64/libluajit-5.1.so.2
fi

ln  -s /usr/local/lib/libluajit-5.1.so.2  /lib64/libluajit-5.1.so.2

echo " ------------Success install tengine ------------------------"
echo "  --prefix=$SOFTDIR/nginx \n
  --conf-path=$SOFTDIR/nginx/etc/nginx.conf \n
  --error-log-path=/var/log/nginx/error.log \n
  --pid-path=/var/run/nginx/nginx.pid  \n
  --lock-path=/var/lock/nginx.lock \n "
